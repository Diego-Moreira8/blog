generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @unique @default(autoincrement())
  username  String      @unique
  password  String
  createdAt DateTime    @default(now())
  Profile   Profile?
  Post      Post[]
  Comment   Comment[]
  LikedPost LikedPost[]
}

model Profile {
  userId   Int     @unique
  user     User    @relation(references: [id], fields: [userId])
  isAuthor Boolean @default(false)
  isAdmin  Boolean @default(false)
  name     String?
  bio      String?
  uiColor  UiColor @default(LIGHT)
  uiFont   UiFont  @default(SERIF)
}

enum UiColor {
  LIGHT
  YELLOW
  DARK
  BLACK
}

enum UiFont {
  SANS
  SERIF
}

model Post {
  id        Int         @unique @default(autoincrement())
  userId    Int
  user      User        @relation(references: [id], fields: [userId])
  title     String
  content   String
  createdAt DateTime    @default(now())
  updatedAt DateTime?
  isPublic  Boolean     @default(false)
  Comment   Comment[]
  LikedPost LikedPost[]
}

model Comment {
  id          Int       @unique @default(autoincrement())
  userId      Int
  user        User      @relation(references: [id], fields: [userId])
  postId      Int
  post        Post      @relation(references: [id], fields: [postId])
  content     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  isAnonymous Boolean   @default(false)
}

model LikedPost {
  userId    Int
  user      User     @relation(references: [id], fields: [userId])
  postId    Int
  post      Post     @relation(references: [id], fields: [postId])
  createdAt DateTime @default(now())

  @@id([userId, postId])
}
